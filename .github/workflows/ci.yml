name: CI - Entrenamiento y Validaci칩n de Modelo
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  # Job 1: Entrenar, Validar y subir como Artifact del JOB
  train-and-validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Instalar dependencias
        run: pip install -r mlflow-deploy/requirements.txt 
        
      # 1. 游릭 PASO NUEVO: Aseguramos la creaci칩n de la carpeta mlruns desde la RA칈Z
      - name: Crear carpeta mlruns
        run: mkdir -p mlflow-deploy/mlruns 
      
      # 2. 游릭 PASO MODIFICADO: Solo ejecutamos los scripts DENTRO del working-directory
      - name: Ejecutar entrenamiento y validaci칩n
        run: |
          python src/train_LinearR.py 
          python src/train_Logistic.py
          python src/validate.py
        # Forzamos el directorio de trabajo para que MLflow escriba en ./mlruns (que ya existe)
        working-directory: mlflow-deploy/
        
      # 칔ltimo paso del Job 1: Subir artefactos como ARTEFACTO DEL JOB
      - name: Save mlruns as Job Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlruns-job-temp
          # La ruta es absoluta dentro del repositorio.
          path: mlflow-deploy/mlruns/


  # Job 2: Subir el Artefacto del JOB a GitHub Workflow (Este bloque NO CAMBIA)
  upload-to-workflow:
    needs: train-and-validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Descargar Artifacts del Job Anterior
        uses: actions/download-artifact@v4
        with:
          name: mlruns-job-temp
          path: mlruns_downloaded/ 

      - name: Upload mlruns as Final Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlruns 
          path: mlruns_downloaded/ 
